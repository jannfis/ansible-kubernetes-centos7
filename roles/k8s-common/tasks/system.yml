---
- name: Ensure br_netfilter is loaded
  modprobe:
    name: br_netfilter
    state: present

- name: Ensure br_netfilter is loaded at boot time
  lineinfile:
    line: "br_netfilter"
    path: /etc/modules-load.d/br_netfilter.conf
    create: yes
    owner: root
    group: root
    mode: 0644

- name: ensure net.bridge.bridge-nf-call-ip6tables is set to 1
  sysctl:
    name: net.bridge.bridge-nf-call-ip6tables
    value: 1
    state: present

- name: ensure net.bridge.bridge-nf-call-iptables is set to 1
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1
    state: present

- name: Get swap status
  command: /usr/sbin/swapon -s
  register: swapstate

- name: Turn off swap on all machines
  command: /usr/sbin/swapoff -a
  when: "swapstate.stdout != ''"

- name: Ensure swap is not mounted at boot-time
  mount:
    path: swap
    state: absent

- name: Ensure kube group exists on the target systen
  group:
    name: "{{ kubernetes.cluster.k8s_user.group }}"
    gid: "{{ kubernetes.cluster.k8s_user.gid }}"
  when: "kubernetes.cluster.k8s_user.managed"

- name: Ensure kube user exists on the target system
  user:
    name: "{{ kubernetes.cluster.k8s_user.username }}"
    uid: "{{ kubernetes.cluster.k8s_user.uid }}"
    group: "{{ kubernetes.cluster.k8s_user.group }}"
    comment: Kubernetes administration user
    shell: /bin/bash
  when: "kubernetes.cluster.k8s_user.managed"

- name: Ensure .ssh directory in kube user directory exists
  file:
    path: "{{ kubernetes.cluster.k8s_user.homedir }}/.ssh"
    state: directory
    owner: "{{ kubernetes.cluster.k8s_user.username }}"
    group: "{{ kubernetes.cluster.k8s_user.group }}"
    mode: 0700
  when: "kubernetes.cluster.k8s_user.managed"

- name: Ensure descriptors directory in kube user directory exists
  file:
    path: "{{ kubernetes.cluster.k8s_user.homedir }}/descriptors"
    state: directory
    owner: "{{ kubernetes.cluster.k8s_user.username }}"
    group: "{{ kubernetes.cluster.k8s_user.group }}"
    mode: 0700

- name: Ensure state directory in kube user directory exists
  file:
    path: "{{ kubernetes.cluster.k8s_user.homedir }}/.k8s-state"
    state: directory
    owner: "{{ kubernetes.cluster.k8s_user.username }}"
    group: "{{ kubernetes.cluster.k8s_user.group }}"
    mode: 0700

- name: Ensure public SSH key for kube user is deployed
  lineinfile:
    path: "{{ kubernetes.cluster.k8s_user.homedir }}/.ssh/authorized_keys"
    create: yes
    owner: "{{ kubernetes.cluster.k8s_user.username }}"
    group: "{{ kubernetes.cluster.k8s_user.group }}"
    mode: 0600
    line: "{{ kubernetes.cluster.k8s_user.ssh_key }}"
  when: "kubernetes.cluster.k8s_user.managed"

